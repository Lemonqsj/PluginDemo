apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.alibaba.arouter'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId   //插件化的时候一定要和包名一致
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled false //插件化不需要分包的

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        kapt {
            arguments {
                // 路由框架译配置
                // module名称
                arg("AROUTER_MODULE_NAME", project.getName())
                // 是否生成路由文档，"enable"：生成文档，其他字符串不生成路由文档
                arg("AROUTER_GENERATE_DOC", "enable")
            }
        }
        //阿里路由框架配置
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName()]
//                includeCompileClasspath = true
//            }
//        }

//        kapt {
//            arguments {
//                arg("AROUTER_MODULE_NAME", project.getName())
//                arg("AROUTER_GENERATE_DOC", "enable")
//                arg("includeCompileClasspath", "true")
//            }
//            generateStubs = true
//        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    signingConfigs {
    }

    lintOptions {
        abortOnError false
    }
//    buildFeatures {
//        viewBinding true
//    }

    dataBinding {
        enabled true
    }
}

dependencies {

//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation 'androidx.core:core-ktx:1.2.0'
//    implementation 'androidx.appcompat:appcompat:1.1.0'
//    implementation 'com.google.android.material:material:1.1.0'
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(path: ':lib_base')


    if (!isBuildModule.toBoolean()) {
//        implementation project(path: ':ft_login')
        implementation project(path: ':ft_main')
//        implementation project(path: ':module_user')
//        implementation project(path: ':module_search')
//        implementation project(path: ':module_square')
//        implementation project(path: ':module_project')
//        implementation project(path: ':module_web')
    }
    kapt  rootProject.ext.dependencies["arouter_compiler"]
}
//
//
//引入replugin的插件支持
apply plugin: 'replugin-host-gradle'


/**
 * 配置项均为可选配置，默认无需添加
 * 更多可选配置项参见replugin-host-gradle的RepluginConfig类
 * 可更改配置项参见 自动生成RePluginHostConfig.java
 */
repluginHostConfig {
    /**
     * 是否使用 AppCompat 库
     * 不需要个性化配置时，无需添加
     * 为插件提供各种兼容库
     */
    useAppCompat = true
}

dependencies {
    implementation 'com.qihoo360.replugin:replugin-host-lib:2.3.3'

}